<?xml version="1.0"?>
<!DOCTYPE moduleset SYSTEM "moduleset.dtd">
<?xml-stylesheet type="text/xsl" href="moduleset.xsl"?>
<moduleset>
  <repository name="download.gnome.org" type="tarball" default="yes"
              href="https://download.gnome.org/sources/"/>
  <repository name="openssl" type="tarball"
              href="https://www.openssl.org/source/"/>
  <repository name="ftp.gnu.org" type="tarball"
              href="https://ftp.gnu.org/gnu/"/>
  <repository name="sourceforge" type="tarball"
              href="http://downloads.sourceforge.net/sourceforge/"/>
  <repository name='gnupg.org' type='tarball' href="https://gnupg.org/ftp/" />
  <repository name="webm" type="tarball"
              href="http://downloads.webmproject.org/releases/"/>
  <repository name="webkit.org" type="tarball"
              href="http://www.webkitgtk.org/releases/"/>
  <repository type="tarball" name="github-tarball" href="https://github.com/"/>

  <!-- Builds latest stable version of WebKitGTK for GTK 3.x -->
  <metamodule id="meta-gtk-osx-webkit-gtk3">
    <dependencies>
      <dep package="meta-gtk-osx-gtk3"/>
      <dep package="webkit2gtk3"/>
    </dependencies>
  </metamodule>

  <!-- of the many arguments such as prefix and libdir that jhbuild might pass
  to configure, openssl only understands prefix, and only with =. -->
  <autotools id="openssl" autogen-sh="Configure" autogenargs="shared "
             autogen-template="%(srcdir)s/%(autogen-sh)s --prefix=%(prefix)s --openssldir=%(prefix)s/etc/ssl %(autogenargs)s"
             makeinstallargs="install_sw" supports-non-srcdir-builds="no">
    <branch module="openssl-1.1.1o.tar.gz" version="1.1.1o" repo="openssl"
            hash="sha256:9384a2b0570dd80358841464677115df785edb941c71211f75076d72fe6b438f"/>
  </autotools>

  <!-- Rudely demands TeX to build documentation -->
  <!-- libnettle 3.7 doesn't have arm64 assembler support and the support that's added in master is for arm-64-neutron that's incompatible with Apple Silicon. -->
  <if condition-set="arm64">
    <autotools id="libnettle" autogen-sh="configure"
               autogenargs="--disable-documentation --disable-assembler">
      <branch repo="ftp.gnu.org" version="3.7.3"
              module="nettle/nettle-3.7.3.tar.gz"
              hash="sha256:661f5eb03f048a3b924c3a8ad2515d4068e40f67e774e8a26827658007e3bcf0">
      </branch>
      <dependencies>
        <dep package="gmp"/>
        <dep package="openssl"/>
      </dependencies>
    </autotools>
  </if>
  <if condition-unset="arm64">
    <autotools id="libnettle" autogen-sh="configure"
               autogenargs="--disable-documentation">
      <branch repo="ftp.gnu.org" version="3.7.3"
              module="nettle/nettle-3.7.3.tar.gz"
              hash="sha256:661f5eb03f048a3b924c3a8ad2515d4068e40f67e774e8a26827658007e3bcf0">
      </branch>
      <dependencies>
        <dep package="gmp"/>
        <dep package="openssl"/>
      </dependencies>
    </autotools>
  </if>

  <autotools id="libtasn1" autogen-sh="configure">
    <branch repo="ftp.gnu.org" version="4.18.0"
            module="libtasn1/libtasn1-4.18.0.tar.gz"
            hash="sha256:4365c154953563d64c67a024b607d1ee75c6db76e0d0f65709ea80a334cd1898"/>
  </autotools>

  <autotools id="zlib" autogen-sh="configure" skip-autogen="never"
             supports-non-srcdir-builds="no">
    <branch repo="sourceforge" version="1.2.11"
            module="libpng/zlib-1.2.11.tar.xz"
            hash="sha256:4ff941449631ace0d4d203e3483be9dbc9da454084111f97ea0a2114e19bf066"/>
  </autotools>

  <autotools id="p11-kit" autogen-sh="configure"
             autogenargs="--without-trust-paths">
    <branch repo="github-tarball" version="0.23.22"
            module="p11-glue/p11-kit/releases/download/0.23.22/p11-kit-0.23.22.tar.xz"
            hash="sha256:8a8f40153dd5a3f8e7c03e641f8db400133fb2a6a9ab2aee1b6d0cb0495ec6b6">
    </branch>
    <dependencies>
      <dep package="libffi"/>
      <dep package="libtasn1"/>
    </dependencies>
  </autotools>

  <if condition-unset="pre-Mavericks">
    <autotools id="gnutls" autogen-sh="autoreconf"
               autogenargs="--disable-gtk-doc-html --with-included-unistring">
      <branch repo="gnupg.org" version="3.7.1"
              module="gcrypt/gnutls/v3.7/gnutls-3.7.1.tar.xz"
              hash="sha256:3777d7963eca5e06eb315686163b7b3f5045e2baac5e54e038ace9835e5cac6f">
      </branch>
      <dependencies>
        <dep package="libnettle"/>
        <dep package="libtasn1"/>
        <dep package="zlib"/>
        <dep package="p11-kit"/>
        <dep package="libgcrypt"/>
      </dependencies>
    </autotools>
  </if>

  <autotools id="libgpg-error" autogen-sh="autoreconf"
             autogenargs="--disable-doc">
    <branch repo="gnupg.org" version="1.43"
            module="gcrypt/libgpg-error/libgpg-error-1.43.tar.bz2"
            hash="sha256:a9ab83ca7acc442a5bd846a75b920285ff79bdb4e3d34aa382be88ed2c3aebaf">
    </branch>
  </autotools>

 <autotools id="libgcrypt" autogen-sh="configure">
    <branch repo="gnupg.org" version="1.9.4"
            module="gcrypt/libgcrypt/libgcrypt-1.9.4.tar.bz2"
            hash="sha256:ea849c83a72454e3ed4267697e8ca03390aee972ab421e7df69dfe42b65caaf7"/>
    <dependencies>
      <dep package="libgpg-error"/>
    </dependencies>
  </autotools>

  <autotools id="gpg" autogen-sh='configure'>
    <branch repo="gnupg.org" version="2.3.3"
            module="gcrypt/gnupg/gnupg-2.3.3.tar.bz2"
            hash="sha256:5789b86da6a1a6752efb38598f16a77af51170a8494039c3842b085032e8e937"/>
            />
    <dependencies>
      <dep package="libgpg-error"/>
      <dep package="libgcrypt"/>
    </dependencies>
  </autotools>
  
  <meson id="libsecret" mesonargs="-Dvapi=disabled -Dgtk_doc=disabled">
    <branch version="0.20.4"
            module="libsecret/0.20/libsecret-0.20.4.tar.xz"
            />
    <dependencies>
      <dep package="glib"/>
      <dep package="libgcrypt"/>
    </dependencies>
  </meson>

  <meson id="gcr">
    <branch version="3.38"
            module="gcr/3.38/gcr-3.38.1.tar.xz"
            />
    <dependencies>
      <dep package="p11-kit"/>
      <dep package="gpg"/>
      <dep package="libsecret"/>
      <dep package="glib"/>
    </dependencies>
  </meson>
  
  <autotools id="gnome-keyring"
             autogenargs="--disable-pam --without-root-certs">
    <branch module="gnome-keyring/40/gnome-keyring-40.0.tar.xz"
            version="40.0"
            />
    <dependencies>
      <dep package="libgcrypt"/>
      <dep package="gcr"/>
    </dependencies>
  </autotools>

  <meson id="glib-networking" mesonargs="-Dopenssl=enabled">
    <branch module="glib-networking/2.68/glib-networking-2.68.0.tar.xz"
            version="2.68.0"
            hash="sha256:0b235e85ad26b3c0d12255d0963c460e5a639c4722f78e2a03e969e224b29f6e"/>
    <dependencies>
      <if condition-unset="pre-Mavericks">
        <dep package="gnutls"/>
      </if>
      <dep package="glib"/>
    </dependencies>
  </meson>

  <autotools id="libpsl" autogen-sh='configure'>
    <branch repo="github-tarball" version="0.21.1"
            module="rockdaboot/libpsl/releases/download/0.21.1/libpsl-0.21.1.tar.gz"
            hash="sha256:ac6ce1e1fbd4d0254c4ddb9d37f1fa99dec83619c1253328155206b896210d4c"/>
  </autotools>

  <meson id="libsoup" mesonargs="-Dvapi=disabled">
    <branch module="libsoup/2.72/libsoup-2.72.0.tar.xz" version="2.72.0"
            hash="sha256:170c3f8446b0f65f8e4b93603349172b1085fb8917c181d10962f02bb85f5387">
    </branch>
    <dependencies>
      <dep package="libpsl"/>
      <dep package="python3"/>
      <dep package="glib"/>
      <dep package="glib-networking"/>
      <dep package="sqlite"/>
      <dep package="vala"/>
    </dependencies>
  </meson>

  <autotools id="libwebp" autogen-sh="configure"  autogenargs="--enable-libwebpmux --enable-libwebpdecoder">
    <branch repo="webm" module="webp/libwebp-1.2.2.tar.gz" version="1.2.2"
            hash="sha256:7656532f837af5f4cec3ff6bafe552c044dc39bf453587bd5b77450802f4aee6"/>
  </autotools>


  <!-- This is the stable release of WebKitGTK, for GTK 3.x. Use it if you need
      the WebKit2 API.
    ENABLE_MINIBROWSER: This is enabled because it's an easy test of whether the
      library is working correctly: run "jhbuild run MiniBrowser".
    USE_SYSTEMD: macOS doesn't have systemd.
    ENABLE_VIDEO, ENABLE_WEB_AUDIO: Requires gstreamer. If you want video and
      audio, fix this in your .jhbuildrc-custom. You may need some extra
      patches, this is untested.
    ENABLE_CREDENTIAL_STORAGE: Requires libsecret. No module for this.
    ENABLE_GEOLOCATION: Requires geoclue. No module for this.
    ENABLE_GRAPHICS_CONTEXT_GL: Known to not work with quartz.
    ENABLE_GAMEPAD: Requires an extra dependency, libmannette.
    USE_LIBNOTIFY: Requires libnotify. No module for this.
    USE_LIBHYPHEN: Requires libhyphen. No module for this.
    USE_LIBSECRET: Requires libsecret. No module for this.
    ENABLE_TOUCH_EVENTS: Seems not to be needed.
    USE_OPENJPEG: Requires openjpeg. No module for this.
    USE_WOFF2: Requires Woff2. No module for this
    USE_WPE_RENDERER: For embedded systems, not Macs.  -->
  <cmake id="webkit2gtk3"
         cmakeargs='-DPORT=GTK -DENABLE_X11_TARGET=OFF -DENABLE_QUARTZ_TARGET=ON -DENABLE_MINIBROWSER=ON -DENABLE_INTROSPECTION=ON  -DUSE_SYSTEMD=OFF -DENABLE_VIDEO=OFF -DENABLE_WEB_AUDIO=OFF -DENABLE_GEOLOCATION=OFF -DUSE_LIBNOTIFY=OFF -DUSE_LIBHYPHEN=OFF -DUSE_LIBSECRET=OFF -DENABLE_TOUCH_EVENTS=OFF  -DUSE_OPENJPEG=OFF -DUSE_WOFF2=OFF -DUSE_WPE_RENDERER=OFF -DENABLE_GRAPHICS_CONTEXT_GL=OFF -DENABLE_GAMEPAD=OFF -DUSE_APPLE_ICU=NO -DCMAKE_CXX_FLAGS="-stdlib=libc++" -DCMAKE_MACOSX_RPATH=OFF'>
    <branch repo="webkit.org" module="webkitgtk-2.32.0.tar.xz" version="2.32.0"
            hash="sha256:9d7df4dae9ada2394257565acc2a68ace9308c4c61c3fcc00111dc1f11076bf0">
      <patch file="WebKit2Gtk3-2.32.0-cumulative.patch" strip="1"/>
     <patch file="WebKit2Gtk3-2.30.1-Disable-AUDIT_TOKEN-for-Gtk-builds.patch" strip="1"/>
    </branch>
    <dependencies>
      <dep package="libwebp"/>
      <dep package="enchant"/>
      <dep package="icu"/>
      <dep package="libsoup"/>
      <dep package="libgcrypt"/>
      <dep package="meta-gtk-osx-gtk3"/>
    </dependencies>
    <after>
      <dep package="meta-gtk-osx-gstreamer"/>
    </after>
  </cmake>
 
</moduleset>
